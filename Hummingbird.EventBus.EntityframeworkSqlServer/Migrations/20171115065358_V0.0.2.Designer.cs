// <auto-generated />
using Hummingbird.EventBus.EntityframeworkSqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Hummingbird.EventBus.EntityframeworkSqlServer.Migrations
{
    [DbContext(typeof(EventLogContext))]
    [Migration("20171115065358_V0.0.2")]
    partial class V002
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hummingbird.EventBus.Storage.Abstractions.EventConsumeLogEntry", b =>
                {
                    b.Property<string>("EventId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("QueueName")
                        .IsRequired();

                    b.Property<int>("State");

                    b.Property<int>("TimesConsume");

                    b.HasKey("EventId");

                    b.ToTable("EventConsumeLogs");
                });

            modelBuilder.Entity("Hummingbird.EventBus.Storage.Abstractions.EventLogEntry", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("EventTypeName")
                        .IsRequired();

                    b.Property<int>("State");

                    b.Property<int>("TimesSent");

                    b.HasKey("EventId");

                    b.ToTable("EventLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
